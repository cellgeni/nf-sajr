params{
 outdir = 'scsajr_out'
 SAMPLEFILE = ""
 BARCODEFILE = ""
 bam_on_irods = false
 ref = '/nfs/cellgeni/pasham/code/nf-scsajr/ref/human_2020A_chr'
 // pseudobulk filtering parameters
 mincells = 30
 minsamples = 2
 // affects only pseudobulking looks like  it is better to set it to 1 due to memory issues
 ncores = 4
 // for re-pseudobulking
 preprocessed_rds = ''
 // for reference generation
 gtf = ''
}

singularity {
  enabled     = true
  autoMounts  = true
  runOptions  = '-B /lustre,/nfs --home /tmp/snare_tmp'
  pullTimeout = '100m'
}

executor {
  name = 'lsf'
  perJobMemLimit = true
}

process {
  container     = 'quay.io/cellgeni/scsajr:latest'
  //container   = '/nfs/cellgeni/pasham/singimage/scsajr_r441_v0.1.sif'
  errorStrategy = 'retry'
  
  maxRetries = { task.exitStatus in 130..140 ? 3 : 1 }
  
  withName: make_ref {
    cpus = 1
    memory = 20.GB
    queue = 'normal'
  }
  
  withName: postprocess{
    cpus = params.ncores
    queue = 'normal'  
    memory = {20.GB + 150.MB * task.attempt * n_samples * params.ncores}
  }

  
  withName: get_data {
    cpus = 1
    memory = 2.GB
    queue = 'normal'
    container = ''
  }

  withName: run_sajr {
    cpus = 1
    queue = 'long'
    memory = {10.GB + bam_path.size() / 10 * 11.B + 10.GB * task.attempt}
  }
  
  withLabel: pseudobulk {
    cpus = params.ncores
    memory = {10.GB + n_samples * 300.MB  + 150.MB * task.attempt * n_samples}
    queue = 'normal'
  }
  
  withName: generate_summary {
    cpus = 1
    memory = {5.GB + 5.GB * task.attempt}
    queue = 'normal'
  }
  
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Capturing Nextflow log files into a reports directory
timeline {
   enabled = true
   file = "${params.outdir}/nextflow-reports/timeline.html"
   overwrite = true
}

report {
   enabled = true
   file = "${params.outdir}/nextflow-reports/report.html"
   overwrite = true
}

trace {
   enabled = true
   file = "${params.outdir}/nextflow-reports/trace.txt"
   overwrite = true
}

// Ensures work directories and removed when pipeline completes
cleanup = false
